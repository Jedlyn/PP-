#include <stdio.h>
#include <stdlib.h>

// Definicja struktury węzła drzewa binarnego
struct node {
    int data;
    struct node *left;
    struct node *right;
};

// Funkcja tworząca nowy węzeł
struct node* createNode(int data) {
    struct node* newNode = (struct node*)malloc(sizeof(struct node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

// Funkcja rekurencyjna do wyświetlania wartości w porządku in-order
void inOrderTraversal(struct node *root) {
    if (root == NULL) {
        return;
    }

    // Najpierw wywołaj dla lewego poddrzewa
    inOrderTraversal(root->left);

    // Następnie wyświetl wartość bieżącego węzła
    printf("%d ", root->data);

    // Na końcu wywołaj dla prawego poddrzewa
    inOrderTraversal(root->right);
}

// Funkcja główna do testowania
int main() {
    // Tworzenie przykładowego drzewa binarnego
    struct node *root = createNode(9);
    root->left = createNode(6);
    root->right = createNode(11);
    root->left->left = createNode(4);
    root->left->right = createNode(7);
    root->left->left->left = createNode(2);
    root->right->left = createNode(10);
    root->right->right = createNode(15);
    root->right->right->left = createNode(12);
    root->right->right->right = createNode(25);

    // Wyświetlenie wartości w porządku in-order
    printf("Values in in-order: ");
    inOrderTraversal(root);
    printf("\n");

    return 0;
}
